---
- name: CUDA Toolkit
  hosts: all
  become: yes
  tasks:
    - name: Add CUDA apt-key
      apt_key:
        url: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub
        state: present

    - name: Add CUDA apt repository
      apt_repository:
        repo: 'deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /'
        state: present
        filename: nvidia
        update_cache: yes

    - name: Add Nvidia container runtime apt-key
      apt_key:
        url: https://nvidia.github.io/nvidia-docker/gpgkey
        state: present

    - name: nvidia-container-runtime apt repositories are registered
      apt_repository:
        repo: "{{ item }}"
        filename: nvidia-container-runtime
        state: present
        update_cache: yes
      with_items:
        - 'deb https://nvidia.github.io/libnvidia-container/stable/ubuntu20.04/amd64/ /'
        - 'deb https://nvidia.github.io/nvidia-container-runtime/stable/ubuntu20.04/amd64/ /'
        - 'deb https://nvidia.github.io/nvidia-docker/ubuntu20.04/amd64/ /'
      register: nvidia_container_runtime_apt_repo

    - name: Install Nvidia Driver
      apt: pkg=nvidia-driver-470 state=present

    - name: Install CUDA Toolkit
      apt: pkg=nvidia-container-toolkit update_cache=yes state=present

- name: Docker
  hosts: all
  become: yes
  tasks:
    - name: Add Docker apt-key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker apt repository
      apt_repository:
        repo: 'deb https://download.docker.com/linux/ubuntu disco stable'
        state: present
        filename: docker
        update_cache: yes

    - name: Install Docker packages
      apt:
        pkg={{ item }}
        update_cache=yes
        state=present
      with_items:
        - docker-ce

- name: User Configuration
  hosts: all
  become: yes

  tasks:
  - name: Ensure 'docker' group exists
    become: yes
    group:
      name: docker
    tags: id

  - name: "Add '{{ ansible_user }}' user to 'docker' group."
    become: yes
    user:
      name: "{{ ansible_user }}"
      groups:
        - docker
      append: yes

  - name: Take the newly added 'docker' group into account
    meta: reset_connection

  - name: Register current user's id
    shell: id
    register: id

  - debug: var=ids

- name: Install docker-compose
  hosts: all
  become: yes
  tasks:
  - name: Download docker-compose
    get_url:
      url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: '0777'

- name: Install NGC CLI
  hosts: all
  become: yes
  tasks:
  - name: Setup for CLI
    ansible.builtin.file:
      path: /opt/ngc
      state: directory
      mode: '0755'

  - name: Download NGC CLI
    unarchive:
      src: https://ngc.nvidia.com/downloads/ngccli_linux.zip
      dest: /opt/ngc/
      remote_src: yes

  - name: Fix permissions
    ansible.builtin.file:
      path: /opt/ngc/ngc
      mode: '1777'

  - name: Adding the path in the Profile files
    lineinfile: dest=/home/{{ ansible_user }}/.bash_profile line='export PATH=$PATH:/opt/ngc' insertafter='EOF' regexp='export PATH=$PATH:/opt/ngc' state=present
    become: true

- name: Restart
  hosts: all
  become: yes

  tasks:
  - name: Rebooting machine
    reboot:

- name: Cheminfo Setup
  hosts: all
  become: yes

  tasks:
  - name: Checkout cheminformatics github repo
    ansible.builtin.git:
      repo: https://github.com/NVIDIA/cheminformatics
      dest: /opt/cheminfomatics
      version: dev

  - name: Execute Setup
    command: /opt/cheminfomatics/launch.sh setup
    args:
      chdir: /opt/cheminfomatics/
